// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cread_csv
Rcpp::DataFrame cread_csv(std::string& fileName, bool header);
RcppExport SEXP _helpeR_cread_csv(SEXP fileNameSEXP, SEXP headerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type fileName(fileNameSEXP);
    Rcpp::traits::input_parameter< bool >::type header(headerSEXP);
    rcpp_result_gen = Rcpp::wrap(cread_csv(fileName, header));
    return rcpp_result_gen;
END_RCPP
}
// negclean
void negclean(DataFrame x);
RcppExport SEXP _helpeR_negclean(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type x(xSEXP);
    negclean(x);
    return R_NilValue;
END_RCPP
}
// neural_arrange
DataFrame neural_arrange(NumericMatrix df);
RcppExport SEXP _helpeR_neural_arrange(SEXP dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type df(dfSEXP);
    rcpp_result_gen = Rcpp::wrap(neural_arrange(df));
    return rcpp_result_gen;
END_RCPP
}
// validation
Rcpp::DataFrame validation(Rcpp::DataFrame valid, Rcpp::DataFrame predic);
RcppExport SEXP _helpeR_validation(SEXP validSEXP, SEXP predicSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type valid(validSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type predic(predicSEXP);
    rcpp_result_gen = Rcpp::wrap(validation(valid, predic));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_helpeR_cread_csv", (DL_FUNC) &_helpeR_cread_csv, 2},
    {"_helpeR_negclean", (DL_FUNC) &_helpeR_negclean, 1},
    {"_helpeR_neural_arrange", (DL_FUNC) &_helpeR_neural_arrange, 1},
    {"_helpeR_validation", (DL_FUNC) &_helpeR_validation, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_helpeR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
